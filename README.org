#+TITLE: OpenGLCLass2
#+SUBTITLE: My progression and excercises
#+AUTHOR: R.U.
#+DATE: 2024-11-03

* Hi!

This is my progress learning basic C++ and GLSL. Examples coming soon!
Adding nfd (nativefiledialog) to load shaders from within the app.
Also adding screenshots and ImGui implementation.
Still needs lots of development and already has a lot of cleanup to be done. Currently I'm using this tutorial: https://github.com/VictorGordan/opengl-tutorials/tree/main/YoutubeOpenGL%201%20-%20Create%20Window

* Usage:
 - disp_tex.cpp - render a texture on screen
 - pyramid_ex.cpp - render a textured mesh with diffused lighting
 - shaderToy.cpp - a shadertoy-like app that uses just a fragment shader for rendering (press r to refresh the shader)

   Run the compiled program from the build directory. Store shaders and textures in the src/shaders and src/textures directory.  
** CMakeLists.txt
a basic CMake file:
#+begin_src cmake
  # ~/OpenGLClass2/CMakeLists.txt
  cmake_minimum_required(VERSION 3.5)
  project(my_cmake_project VERSION 0.1.1)

  find_package(OpenGL REQUIRED)
  add_executable(
      my_cmake_project
      src/config.cpp # for stb implementation
      src/main.cpp # generates a window and OpenGL context
      src/glad.c # single file OpenGL library
      src/TriangleMesh.cpp # mesh-object class
      src/Material.cpp # texture class
      src/Shader.cpp # shaderprogram class
      src/IBO.cpp # Index/Element buffer object class
      src/VBO.cpp # Vertex buffer object class
      src/VAO.cpp # Vertex attributes object class
      src/Camera.cpp # Camera class
  )

  target_include_directories(my_cmake_project PRIVATE include)
  target_link_libraries(my_cmake_project glfw OpenGL::GL)
  # EOF
#+end_src

** Compiling:
Clone the repo.
#+begin_src 
git clone https://github.com/drytumbler/OpenGLClass2.git
#+end_src
First cd into the /src directory!
#+begin_src 
cd ~/OpenGLClass2/src
#+end_src
From the /src directory, run this command. Compiling from the base directory will not work for now.
#+begin_src
cmake -S .. -B ../build -DCMAKE_BUILD_TYPE=Debug && cmake --build ../build
#+end_src

* Changelog :exclude:
├── include
│   ├── glad
│   │   └── glad.h
│   ├── imgui
│   │   ├── imconfig.h
│   │   ├── imgui.cpp
│   │   ├── imgui_demo.cpp
│   │   ├── imgui_draw.cpp
│   │   ├── imgui.h
│   │   ├── imgui_impl_glfw.cpp
│   │   ├── imgui_impl_glfw.h
│   │   ├── imgui_impl_opengl3.cpp
│   │   ├── imgui_impl_opengl3.h
│   │   ├── imgui_impl_opengl3_loader.h
│   │   ├── imgui_internal.h
│   │   ├── imgui_tables.cpp
│   │   ├── imgui_widgets.cpp
│   │   ├── imstb_rectpack.h
│   │   ├── imstb_textedit.h
│   │   └── imstb_truetype.h
│   ├── KHR
│   │   └── khrplatform.h
│   ├── nfd
│   │   └── nfd.h
│   ├── stb
│   │   └── stb_image.h
│   └── stb_image.h
├── lib
│   └── libnfd.a
├── src
│   ├── ex
│   │   ├── camera.cpp
│   │   ├── displ_tex.cpp
│   │   ├── piramid.cpp
│   │   └── shaderToy.cpp
│   ├── shaders
│   │   ├── old
│   │   │   ├── fragment.shader
│   │   │   └── vertex.shader
│   │   ├── toy
│   │   │   ├── circles2.frag
│   │   │   ├── lines2d.frag
│   │   │   ├── raytracer.frag
│   │   │   └── shroom.frag
│   │   ├── default.frag
│   │   ├── default.vert
│   │   ├── disp_tex.frag
│   │   ├── disp_tex.vert
│   │   ├── fragment.shader
│   │   ├── light.frag
│   │   ├── light.vert
│   │   ├── shadertoy.frag
│   │   ├── shadertoy.vert
│   │   └── vertex.shader
│   ├── textures
│   │   ├── lenna.png
│   │   ├── mask.png
│   │   ├── moon.jpg
│   │   ├── moon.png
│   │   ├── sandstone.jpg
│   │   └── sandstone.png
│   ├── Camera.cpp
│   ├── Camera.h
│   ├── config.cpp
│   ├── config.h
│   ├── disp_tex.cpp
│   ├── glad.c
│   ├── IBO.cpp
│   ├── IBO.h
│   ├── main.cpp
│   ├── Material.cpp
│   ├── Material.h
│   ├── math.cpp
│   ├── math.h
│   ├── pyramid_ex.cpp
│   ├── Shader.cpp
│   ├── Shader.h
│   ├── shaderToy.cpp
│   ├── sphere
│   ├── Sphere.cpp
│   ├── Sphere.h
│   ├── TriangleMesh.cpp
│   ├── TriangleMesh.h
│   ├── VAO.cpp
│   ├── VAO.h
│   ├── VBO.cpp
│   └── VBO.h
├── CMakeLists.txt
└── README.org
